managed implementation in class ZCL_R_SUB_PROJ unique;
strict ( 2 );
with draft;
define behavior for ZR_SUB_PROJ alias SubProject
persistent table ztb_sub_proj
draft table ztb_sub_proj_d
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master ( global )
with additional save

{
  field ( readonly )
  Uuid,
  CreatedBy,
  CreatedAt,
  CreatedByUser,
  LocalLastChangedBy,
  LocalLastChangedAt,
  LastChangedAt;

  field ( numbering : managed )
  Uuid;

  field ( mandatory )
  ProjectNumber,
  SubProjectNumber,
  CampusCode,
  SubProjectName;

  field ( features : instance ) Message, Status, ProjectNumber,
  SubProjectNumber,
  CampusCode,
  SubProjectName;


  determination setActive on modify { create; }
//  determination triggerAPI on save { create; update; }
  validation validateData on save { create; field ProjectNumber, SubProjectNumber; }

  // side effect events
  event ApiCalled for side effects;

  side effects
  {
    event ApiCalled affects field ( UuidApi, Status, Message, Criticality );
    field Active affects $self;
  }

  create;
  update;
  delete ( features : instance );

  draft action Activate optimized;
  draft action Discard;
  draft action ( features : instance ) Edit;
  draft action Resume;
  draft determine action Prepare
  {
    validation validateData;
  }

  mapping for ztb_sub_proj
    {
      Uuid               = uuid;
      ProjectNumber      = project_number;
      CampusCode         = campus_code;
      SubProjectNumber   = sub_project_number;
      SubProjectName     = sub_project_name;
      Active             = active;
      UuidApi            = uuid_api;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      Message            = message;
      Status             = status;
      LocalLastChangedBy = local_last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
      LastChangedAt      = last_changed_at;
    }
}